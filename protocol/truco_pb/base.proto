// 游戏通用协议定义
syntax = "proto3";
package pbtruco;
option java_generic_services = true;

option java_package = "com.huya.hcg.game.pb";
option java_multiple_files = true;

//TODO实体类型枚举

enum PacketType {
    TYPE_REQUEST = 0;
    TYPE_RESPONSE = 1;
};

enum ResponseType {
    TYPE_SUCCESS = 0;
    TYPE_FAIL = 1;
};


enum RetCode
{
    SUCCESS = 0;
    ERR_PKTILLEGAL = 1;  //封包错误
    ERR_NOLOGIN = 2;     //没有进行登入操作
    ERR_NOSUB   = 3;     //没有进行topic订阅
    ERR_REPEATLOGIN = 4; //对同一链接进行重复进行登录
    ERR_SIGN_ILLEGAL = 5; //请求签名错误
    ERR_ROOM_FINISHED = 6; //房间已经结束
    ERR_UNKNOWN = 99;    //未知错误
};

// 通用协议号
enum Uri {
    // server to client
    PktBindRsp = 0;
    PktHeartbeatRsp = 1;
    PktKickRsp = 2;
    PktLoadingRsp = 3;
    PktPlayerInfoRsp = 4;
    PktEmojiRsp = 5;
    PktGameStartFailedRsp = 6; // 游戏启动失败，比如对手在一定时间内没能成功加入游戏房间
    PktGameStartRsp=7;//游戏开始
    PktPlayerOutRsp = 8;//退出游戏
    PktGameWinRsp = 9;//游戏胜利信息
    PktGameSignError = 10;//鉴权失败
    PktGamePokerRsp = 11;//扑克信息
    PktPlayerReLoginRsp = 12;//断线重连
    PktPlayerAddPokerRsp = 13;//摸牌操作
    PktPlayerOutPokerRsp = 14;//出牌操作
    PktGameSuccessPokerRsp = 15;//本局结束
    PktGameTakePokerRsp = 16;//点牌返回
    PktGameHuPokerRsp = 17;//胡牌
    PktGameSetPointRsp = 18;//设置分数合押注
    PktGameSetCardsRsp = 19;//设置牌局

    // client to server
    PktHeartbeatReq = 1000; // 心跳
    PktLoadingReq = 1001; // 客户端加载进度
    PktQuitReq = 1002;      // 客户端主动退出游戏
    PktEmojiReq = 1003;     // 发送表情
    PktGameOverReq = 1004;//每局游戏结束
    PktGameAddPokerReq = 1005;//摸牌操作
    PktGameOutPokterReq = 1006;//出牌操作
    PktGameSuccessPokerReq = 1007;//本局结束
    PktGameTakePokerReq = 1008;//点牌
    PktGameHuPokerReq = 1009;//胡牌
}

enum ReconnState {
    NOUSE = 0;          // proto3 枚举必须0开始。。
    NO_PLAYERLIST = 1;  // 游戏客户端重连时，本地没有收到playerlist数据，此时服务器会补发playerlist数据（客户端收到playerlist之后，正常发送loading 100）
    NO_GAMESTART = 2;   // 游戏客户端重连时，本地已经有playerlist数据（重要：这种情况客户端一定补发loading 100）；服务器判断游戏是否开始，如果开始了就下发gamestart（如果没开始，就由客户端发送的loading 100触发gamestart下发）
}

enum EmojiType {
    Emoticon = 0;//动态或静态表情图
    RegularText=1;//系统预设语句
    InputText=2;//用户输入语句
}

// 数据协议，所有接受和发送的数据包都以Packet作为数据协议
message Packet {
    int32 uri = 1;        // 协议号
    bytes body = 2;     // 数据包，proto二进制
}

message EmojiInfo {
    int64 uid = 1;
    int32 emojiId = 2;
    EmojiType emojiType = 3;
    string emojiText = 4;
}

message PlayerInfo {
    int64 uid = 1;
    string name = 2;
    string avatarUrl = 3;
    int32 sex = 4;
    bool ai = 5;
}

message PlayerInfoRsp {
    repeated PlayerInfo players = 1;
}

// 上报加载进度
message LoadingReq {
    int32 progress = 1;
}

// 其他玩家的加载进度
message LoadingRsp{
    int64 uid = 1;
    int32 progress = 2;
}

message BindRsp {
    RetCode code = 1;
    string msg  = 2;
}

message HeartbeatReq {
    int64 timestamp = 1; // 客户端时间戳
}

message HeartbeatRsp {
    int64 timestamp = 1; // 服务器会返回请求的时间戳，客户端来计算rtt时延
}

message KickRsp {
    int64 uid = 1;
    string reason = 2;
}

message GameStartRsp {
    int32 countDown = 1;
    int32 reconnTimeout = 2;
}

message GameFailedRsp {
    int32 roomId = 1;
    string message = 2;
}

enum WinState {
    NormalFinish = 0;           // 正常结束，达成游戏胜利规则
    UserJoinTimeout = 1;        // 用户加入游戏超时
    OtherDisconn = 2;           // 对手掉线，没能按时重连回来
    OtherQuit = 3;              // 对手强制退出
    DRAW = 4;                   // 平局
    ServerShutdown = 5;         // 服务器关机
    GameTimeout = 6;            // 游戏超时结束，到达游戏限定对局时长
}